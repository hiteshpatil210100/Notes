Session 1

* JavaScript Array filter()
    The filter() method creates a new array filled with elements that pass a test provided by a function.

    The filter() method does not execute the function for empty elements.

    The filter() method does not change the original array.

    eg.
        const words = ['spray', 'limit', 'elite', 'exuberant', 'destruction', 'present'];
        const result = words.filter((word) => word.length > 6);
        console.log(result);

Q. Sample input 1 -
    arr: [1, 2, 2, 3, 1, 2]

    without: [2, 3]

    Sample output 1 -
    [1, 1]

Solution:
    function removeListedValues (arr, without) {

        let newArr = arr.filter((item) => {
            if(without.includes(item)){
                return false;
            }
            else {

                return true;

        });
        return newArr;
    }

* try...catch
    The try...catch statement is comprised of a try block and either a catch block, a finally block, or both. 
    The code in the try block is executed first, and if it throws an exception, the code in the catch block will be executed. 
    The code in the finally block will always be executed before control flow exits the entire construct.

    eg. function errorHandler(x) {
            try{
                const val=getX(x);
                return val;
            }catch(error){
                return error;
            }
        }

        function getX(x) {
            if (x == 5) {
                throw new Error("Error Occured");
            }
            return x;
        }