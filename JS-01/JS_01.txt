#Session 1

console.log("Hellow World");

* Primitives Data Types: (Values which cannot be changed further.)
    1.Numbers (-100, 3.14, and others), used for math calculations.
    2.Strings ("hello", "abracadabra", and others), used for text.
    3.Booleans (true and false), used for logical operations.
    4.Undefined (undefined), used for unintentionally missing values.
        var a;
        console.log(a);         //undefined.
    5.Null (null), used for intentionally missing values.
        var a=null;
        console.log(a);         //null.

* Typeof operator returns a string indicating the type of the operand's value
    console.log(typeof("Hitesh"));   //String
    console.log(typeof(5));          //number
    console.log(typeof(true));       //Booleans

* Variables
    1.Declaration
        var a;
    2.Assignment
        a=5;
    3.Declaration + Assignment
        var a=5;
    4.Re-Assignment
        var a=5;
        a=6;
    5.Re-Declaration
        var a=7;

* Const - Declaring a variable using const creates a variable whose value can’t be changed.

Keyword                   Var                         Let                   Const
Allows re-declaration     ✅                          ❌                    ❌
Allows re-assignment?     ✅                          ✅                    ❌

* Valid variable names should:
    Start with a letter, underscore, or dollar sign.
    After the first letter, you can use numbers, letters, underscores, dollar signs.

------------------------------------xxx-------------------------------------

#Session 2

{Expressions,Mathematical Operators,Relational / Logical Operators,If-Else statements,Functions}

* Computers should return NaN when they can't find the operation result. 
  For example, when it's impossible to compute or the operation itself is invalid

* Which ever values visible in code are Literals.

* Functions
    Define a function - Ex. :

        function functionName() {
            console.log("Inside the function");		// function body within {}
        }

    Call a function - Ex. :
		functionName();						// which will then print the msg

* Parameters or Arguments ?        /-----------------------Parameter
    function parametricFunction(param) {
        console.log(param);            
    }

    var argument = “Adieu!”;
    parametricFunction(argument);    
                             \---------------------Argument


------------------------------------XXX-------------------------------

#Session 3
{Strings}

* console.log(favFood.length)             //Prints length of string.

* charAt() method-
    console.log(str.charAt(4));

* Individual characters of a String literal cannot be changed.
  String values are immutable - they cannot be altered once created.

*Strict Mode-
    Strict mode changes previously accepted "bad syntax" into real errors.

*Template Strings / Template Literals
    Template literals are literals delimited with backtick (`) characters,
    allowing for multi-line strings, string interpolation with embedded expressions,
    and special constructs called tagged templates.
    eg: const name = 'Jack';
        console.log(`Hello ${name}!`); // Hello Jack!

    eg:let name="Hitesh";
       let acc_no:425201;

       let str=`Hey ${name} your account number ${acc_no} is deactivated. Please visit bank branch`;

*The conditional (ternary) operator is the only JavaScript operator that takes three operands:
     a condition followed by a question mark ( ? ), then an expression to execute if the condition is truthy 
     followed by a colon ( : ), and finally the expression to execute if the condition is falsy.
     condition ? exprIfTrue : exprIfFalse
     eg.const age = 26;
        const beverage = age >= 21 ? "Beer" : "Juice";
        console.log(beverage); // "Beer"

* String Methods:
    1.indexOf("abc")       //gives the first index of abc in string.
    2.lastIndexOf()        //gives last occurence index of abc in string
    3.Substring
        substring(startPos, endPos) extracts a part of a string and returns it in a new string.
    4.Concat
        str1.concat(str2) joins two or more strings

--------------------------------------XXX---------------------------------------

#Session 4
{For loop, Arrays}

* For Loop:
    Syntax:
	    for (begin ; condition ; step) {
  		    // ... loop body …
        }

* Arrays in JavaScript:
    -With JavaScript array variables, we can store several types of data in one place.
    -Arrays can store anything as their value - primitives, another array, objects, or even functions.
    -Array elements can be accessed and modified using bracket notation.
    -Unlike strings, array entries are mutable & can be changed freely.

* Array Methods:
    .push() appends data to the end of an array & returns the new array length.
    .pop() removes the last element from an array and returns the removed element.

    .shift() works like .pop(), but it removes the first element of the array.
    .unshift() works like .push(), but adds the element at the beginning of the array.    

    Method	    Description
    concat()	joins two or more arrays and returns a result
    indexOf()	searches an element of an array and returns its position
    find()	    returns the first value of an array element that passes a test
    findIndex()	returns the first index of an array element that passes a test
    forEach()	calls a function for each element
    includes()	checks if an array contains a specified element
    push()	    aads a new element to the end of an array and returns the new length of an array
    unshift()	adds a new element to the beginning of an array and returns the new length of an array
    pop()	    removes the last element of an array and returns the removed element
    shift()	    removes the first element of an array and returns the removed element
    sort()	    sorts the elements alphabetically in strings and in ascending order
    slice()	    selects the part of an array and returns the new array
    splice()	removes or replaces existing elements and/or adds new elements

* Sort & Reverse:
    sort() 	- Sorts the array elements in-place, in alphabetical, ascending order.

    reverse() - Reverses the order of the elements in the given array, in-place.


* Falsy or Truthy Values:
    -false, null, 0, "", undefined, and NaN are Falsy values in JavaScript.
    -All values other than these are Truthy, it will evaluate to true.

----------------------------------------------XXX----------------------------------------

#Session 5







